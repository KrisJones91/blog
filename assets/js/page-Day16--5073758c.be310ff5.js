(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{501:function(e,s,t){"use strict";t.r(s);var a=t(2),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"day-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-16"}},[e._v("#")]),e._v(" Day 16")]),e._v(" "),t("p",[t("strong",[e._v("12/22/20")])]),e._v(" "),t("h2",{attrs:{id:"what-are-the-three-states-of-a-promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-states-of-a-promise"}},[e._v("#")]),e._v(' What are the three states of a "Promise"?')]),e._v(" "),t("p",[e._v('"Pending" is the initial state before a promise succeeds or fails.\n"Resolved" is a completed promise.\n"Rejected" is a failed promise.')]),e._v(" "),t("h2",{attrs:{id:"how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[e._v("#")]),e._v(' How do "Promises" seek to resolve the issues of "Callback Hell"?')]),e._v(" "),t("p",[e._v('Promises can help resolve Callback Hell by "chaining" multiple callbacks. This helps organize asynchronous code and allows for an easier read.')]),e._v(" "),t("h2",{attrs:{id:"what-is-the-difference-between-then-and-catch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-then-and-catch"}},[e._v("#")]),e._v(" What is the difference between .then() and .catch()?")]),e._v(" "),t("p",[e._v("The then() method is only used for Promises that have been resolved or successfully completed. The catch() method is used for when a Promise is rejected or fails.")]),e._v(" "),t("h2",{attrs:{id:"afternoon-challenge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-challenge"}},[e._v("#")]),e._v(" Afternoon Challenge")]),e._v(" "),t("p",[e._v("https://krisjones91.github.io/Gregslist/")])])}),[],!1,null,null,null);s.default=r.exports}}]);